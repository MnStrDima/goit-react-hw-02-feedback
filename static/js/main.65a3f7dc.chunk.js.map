{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","styles","buttonWrapper","type","id","onClick","e","Statistics","good","bad","neutral","total","positivePercentage","statsList","statsListItem","itemText","Notification","message","notificationTitle","App","state","feedbackHandler","setState","prevState","buttonId","target","console","log","countTotalFeedback","countPositiveFeedbackPercentage","parseInt","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,cAAgB,kCAAkC,SAAW,+B,0JCC1G,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,K,oBCHQ,SAASC,EAAT,GAAuD,EAA5BC,QAA6B,IAApBC,EAAmB,EAAnBA,gBACjD,OACE,sBAAKC,UAAWC,IAAOC,cAAvB,UACE,wBAAQC,KAAK,SAASC,GAAG,OAAOC,QAAS,SAAAC,GAAC,OAAIP,EAAgBO,IAA9D,kBAGA,wBAAQH,KAAK,SAASC,GAAG,UAAUC,QAAS,SAAAC,GAAC,OAAIP,EAAgBO,IAAjE,qBAGA,wBAAQH,KAAK,SAASC,GAAG,MAAMC,QAAS,SAAAC,GAAC,OAAIP,EAAgBO,IAA7D,oB,oBCTS,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,IACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAIZ,UAAWC,IAAOY,UAAtB,UACE,oBAAIb,UAAWC,IAAOa,cAAtB,SACE,oBAAGd,UAAWC,IAAOc,SAArB,mBAAsCP,OAExC,oBAAIR,UAAWC,IAAOa,cAAtB,SACE,oBAAGd,UAAWC,IAAOc,SAArB,sBAAyCL,OAE3C,oBAAIV,UAAWC,IAAOa,cAAtB,SACE,oBAAGd,UAAWC,IAAOc,SAArB,kBAAqCN,OAEvC,oBAAIT,UAAWC,IAAOa,cAAtB,SACE,oBAAGd,UAAWC,IAAOc,SAArB,oBAAuCJ,OAEzC,oBAAIX,UAAWC,IAAOa,cAAtB,SACE,oBAAGd,UAAWC,IAAOc,SAArB,gCACsBH,EADtB,Y,oBCtBO,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,oBAAIjB,UAAWC,IAAOiB,kBAAtB,SAA0CD,I,ICG9BE,E,4MACnBC,MAAQ,CAAEZ,KAAM,EAAGE,QAAS,EAAGD,IAAK,G,EAEpCY,gBAAkB,SAAAf,GAChB,EAAKgB,UAAS,SAAAC,GACZ,IAAMC,EAAWlB,EAAEmB,OAAOrB,GAE1B,OADAsB,QAAQC,IAAIrB,EAAEmB,OAAOrB,IACd,eACJoB,EAAWD,EAAUC,GAAY,O,EAKxCI,mBAAqB,WAAO,IAAD,EACM,EAAKR,MAGpC,OAJyB,EACjBZ,KADiB,EACXE,QADW,EACFD,K,EAMzBoB,gCAAkC,WAChC,OAAOC,SAAU,IAAM,EAAKF,qBAAwB,EAAKR,MAAMZ,O,uDAGvD,IAAD,EACwBuB,KAAKX,MAA5BZ,EADD,EACCA,KAAME,EADP,EACOA,QAASD,EADhB,EACgBA,IACvB,OACE,qCACE,cAACf,EAAD,CAASC,MAAM,wBAAf,SACE,cAACE,EAAD,CAEEE,gBAAiBgC,KAAKV,oBAG1B,eAAC3B,EAAD,CAASC,MAAM,aAAf,UACiC,IAA9BoC,KAAKH,sBACJ,cAACZ,EAAD,CAAcC,QAAQ,sBAGvBc,KAAKH,qBAAuB,GAC3B,cAACrB,EAAD,CACEC,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOoB,KAAKH,qBACZhB,mBAAoBmB,KAAKF,8C,GA7CNG,aCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1B7C,EAAOC,QAAU,CAAC,cAAgB,yC","file":"static/js/main.65a3f7dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsList\":\"Statistics_statsList__3S8C7\",\"statsListItem\":\"Statistics_statsListItem__2PDsz\",\"itemText\":\"Statistics_itemText__3gk2M\"};","import PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={styles.buttonWrapper}>\n      <button type=\"button\" id=\"good\" onClick={e => onLeaveFeedback(e)}>\n        Good\n      </button>\n      <button type=\"button\" id=\"neutral\" onClick={e => onLeaveFeedback(e)}>\n        Neutral\n      </button>\n      <button type=\"button\" id=\"bad\" onClick={e => onLeaveFeedback(e)}>\n        Bad\n      </button>\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  // options:\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  bad,\n  neutral,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul className={styles.statsList}>\n      <li className={styles.statsListItem}>\n        <p className={styles.itemText}>Good: {good}</p>\n      </li>\n      <li className={styles.statsListItem}>\n        <p className={styles.itemText}>Neutral: {neutral}</p>\n      </li>\n      <li className={styles.statsListItem}>\n        <p className={styles.itemText}>Bad: {bad}</p>\n      </li>\n      <li className={styles.statsListItem}>\n        <p className={styles.itemText}>Total: {total}</p>\n      </li>\n      <li className={styles.statsListItem}>\n        <p className={styles.itemText}>\n          Positive feedback: {positivePercentage}%\n        </p>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <h3 className={styles.notificationTitle}>{message}</h3>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default class App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  feedbackHandler = e => {\n    this.setState(prevState => {\n      const buttonId = e.target.id;\n      console.log(e.target.id);\n      return {\n        [buttonId]: prevState[buttonId] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const stateSumm = good + neutral + bad;\n\n    return stateSumm;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return parseInt((100 / this.countTotalFeedback()) * this.state.good);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            // options={[good, neutral, bad]}\n            onLeaveFeedback={this.feedbackHandler}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 && (\n            <Notification message=\"No feedback given\" />\n          )}\n\n          {this.countTotalFeedback() > 0 && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrapper\":\"FeedbackOptions_buttonWrapper__2Neo9\"};"],"sourceRoot":""}